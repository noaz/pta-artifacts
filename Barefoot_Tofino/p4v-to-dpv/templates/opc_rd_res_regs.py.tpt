import pd_base_tests
from ptf import config
from ptf.testutils import *
from ptf.thriftutils import *
from res_pd_rpc.ttypes import *
from opc.p4_pd_rpc.ttypes import *

class rd_res_regs(pd_base_tests.ThriftInterfaceDataPlane):

    # Init
    def __init__(self):
        pd_base_tests.ThriftInterfaceDataPlane.__init__(self, ["opc"])

    # Connect to thrift server and install device configuration
    def setUp(self):
        pd_base_tests.ThriftInterfaceDataPlane.setUp(self)
        self.sess_hdl = self.conn_mgr.client_init()
        self.dev      = 0
        self.dev_tgt  = DevTarget_t(self.dev, hex_to_i16(0xFFFF))
        print("\nConnected to Device %d, Session %d" % (self.dev, self.sess_hdl))

    # Test
    def runTest(self):

        zero_high = 0x00000000

        # READ & PRINT RESULTS
        print("\n")
        # @DPV rd_res_regs read begin
        # @DPV rd_res_regs read end

        ########################################################################
        ###             TEARDOW OPERATIONS
        ########################################################################

        # Use this method to return the DUT to the initial state by cleaning
        # all the configuration and clearing up the connection
        # def tearDown(self):
        #     self.conn_mgr.complete_operations(self.sess_hdl)
        #     self.conn_mgr.client_cleanup(self.sess_hdl)
        #     print("Closed Session %d" % self.sess_hdl)
        #     pd_base_tests.ThriftInterfaceDataPlane.tearDown(self)
