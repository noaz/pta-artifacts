#include "./include/headers.p4"
#include "./include/metadata.p4"
#include "tofino/stateful_alu_blackbox.p4"
#include <tofino/intrinsic_metadata.p4>
#include <tofino/constants.p4>

// PORTS
#define CPU_PORT 192
#define SW_PORT 52 // PORT 10
#define DEFAULT_PORT CPU_PORT

// STATEFUL ALU
#define SZ_REGS 64
#define SZ_ALU (SZ_REGS / 2)
#define NUM_REGS 1
#define INDEX 0

// ---------------------------------------------------------------------------
// PARSER
// ---------------------------------------------------------------------------
parser start {
    // @DPV opc parser begin
    // @DPV opc parser end
    return ingress;
}
// ---------------------------------------------------------------------------
// MATCH ACTION
// ---------------------------------------------------------------------------
// @DPV opc setdstport begin
// *** SET DESTINATION PORT
action set_dstport (dstport) {
    modify_field (ig_intr_md_for_tm.ucast_egress_port, dstport);
}
table tbl_dstport {
    actions {
        set_dstport;
    }
    default_action: set_dstport (DEFAULT_PORT);
    size: 1;
}
// @DPV opc setdstport end

// @DPV opc config_regs begin
// *** CONFIG REG # 0
register config_reg_0 {
    width: SZ_REGS;
    instance_count: NUM_REGS;
}
blackbox stateful_alu config_alu_0 {
    reg: config_reg_0;
    output_value: register_lo;
    output_dst: dpv_meta.field_0;
}
action config_act_0 () {
    config_alu_0.execute_stateful_alu (INDEX);
}
table config_tbl_0 {
    actions {config_act_0;}
    default_action: config_act_0 ();
    size: 1;
}
// @DPV opc config_regs end

action all_subs () {
    // @DPV opc sub_flds begin
    // @DPV opc sub_flds end
}
table sub_tbl {
    actions {
        all_subs;
    }
    default_action: all_subs;
}

// @DPV opc check_regs begin
// @DPV opc check_regs end

// *** INGRESS
control ingress {

    // @DPV opc rd_config begin
    apply (config_tbl_0);
    // @DPV opc rd_config end

    // @DPV opc sub begin
    apply (sub_tbl);
    // @DPV opc sub end

    // @DPV opc checks begin
    // @DPV opc checks end

    // @DPV opc app_dstport begin
    apply (tbl_dstport);
    // @DPV opc app_dstport end

}